<main class="main-content">
    <div class="blog-detail">
        <div class="blog-header">
            <% if (blog) { %>
            <h2><%= blog.title %></h2>
        </div>

        <img src="<%= blog.imageUrl %>" alt="<%= blog.title %>" class="blog-detail-image">
        
        <p class="blog-detail-content">
            <%= blog.content %>
        </p>
        
        <div class="blog-detail-meta">
            <span class="blog-detail-date"><span style="color:black"> Date: <%= blog.createdAt.toLocaleDateString() %></span></span>
        </div>

        <div class="blog-detail-meta">
            <div class="blog-detail-tags">
                <span style="color:black"> Tags: </span>
                <% if (blog.tags && blog.tags.length > 0) { %>
                    <% blog.tags.forEach(tag => { 
                        if (tag && tag.trim() !== '') { %>                     
                            <span class="blog-tag"><%= tag.trim() %></span>                 
                        <% }
                    }); %>
                <% } else { %>
                    <span class="blog-tag">No tags</span>
                <% } %>   
            </div>
        </div>

        <div class="like-section">
            <button 
                class="like-btn <%= blog.likes.includes(userId) ? 'liked' : '' %>" 
                onclick="toggleLike()"
                data-blog-id="<%= blog._id %>"
                data-is-liked="<%= blog.likes.includes(userId) ? 'true' : 'false' %>"
            >
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-thumbs-up">
                    <path d="M7 10v12"/>
                    <path d="M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z"/>
                </svg>
                <%= blog.likes.includes(userId) ? 'Liked' : 'Like' %> 
                (<%= blog.likes.length %>)
            </button>
        </div>

        <div class="blog-detail-comments">
            <h3 style="color:black">Comments</h3>

            <div class="add-comment">
                <textarea id="new-comment" class="comment-input" placeholder="Add a comment..."></textarea>
                <button class="comment-btn" onclick="addComment()">Post Comment</button>
            </div>

            <% if (blog.comments && blog.comments.length > 0) { %>
                <% blog.comments.forEach(comment => { %>
                    <div class="comment">
                        <span class="comment-author"><%= comment.author %>:</span>
                        <p class="comment-text"><%= comment.text %></p>
                    </div>
                <% }); %>
            <% } else { %>
                <p style="color:black">No comments yet.</p>
            <% } %>
        </div>

        <% } else { %>
            <p>Blog not found.</p>
        <% } %>
    </div>
</main>

<script>
   
   async function toggleLike() {
    try {
        const blogId = '<%= blog._id %>'; 
        const userId = '<%= userId%>';
        const likes = <%- JSON.stringify(blog.likes) %>; 
        const isLiked = likes.includes(userId);
        
        
        const apiEndpoint = isLiked 
            ? `/api/likes/remove/${blogId}/${userId}` 
            : `/api/likes/add/${blogId}/${userId}`;
        
        const response = await fetch(apiEndpoint, {
            method: 'GET',
            credentials:'include',

        });

        if (!response.ok) {
            throw new Error('Failed to toggle like');
        }

        window.location.reload();
    } catch (error) {
        console.error('Error toggling like:', error);
        alert(error);
    }
}

async function addComment() {
    const commentTextArea = document.getElementById('new-comment');
    const commentText = commentTextArea.value.trim();

    // Validate comment
    if (!commentText) {
        alert('Please enter a comment.');
        return;
    }

    try {
        const blogId = '<%= blog._id %>';
        const userId = '<%= userId %>';
        
        const response = await fetch(`/api/comments/add/${blogId}/${userId}`, {
            method: 'POST',
            credentials: "include",
            headers: {
        "Content-Type": "application/json"  // âœ… Specify JSON format
    },
            body: JSON.stringify({
                content: commentText
            })
        });

        if (!response.ok) {
            throw new Error('Failed to add comment');
        }

       
        window.location.reload();
    } catch (error) {
        console.error('Error adding comment:', error);
        alert('Failed to post your comment. Please try again.');
    }
}


document.getElementById('new-comment').addEventListener('keypress', function(event) {
    
    if (event.key === 'Enter' && !event.shiftKey) {
        event.preventDefault();
        addComment();
    }
});
</script>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .main-content {
        font-family: 'Arial', sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f4f6f9;
    }

    .blog-detail {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 30px;
        overflow: hidden;
        position: relative;
    }

    .blog-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .blog-admin-actions {
        display: flex;
        gap: 10px;
    }

    .update-btn, .delete-btn {
        background-color: #9333ea;
        color: white;
        border: none;
        padding: 8px 12px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 0.9rem;
    }

    .update-btn {
        background-color: #2ecc71;
    }

    .update-btn:hover {
        background-color: #27ae60;
    }

    .delete-btn {
        background-color: #e74c3c;
    }

    .delete-btn:hover {
        background-color: #c0392b;
    }

    .blog-detail h2 {
        color: #2c3e50;
        font-size: 2rem;
        margin-bottom: 20px;
        border-bottom: 3px solid #9333ea;
        padding-bottom: 10px;
    }

    .blog-detail-image {
        width: 100%;
        height: 300px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

    .blog-detail-image:hover {
        transform: scale(1.02);
    }

    .blog-detail-content {
        line-height: 1.6;
        color: #34495e;
        margin-bottom: 20px;
    }

    .blog-detail-meta {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 10px;
        background-color: #f1f4f8;
        border-radius: 8px;
    }

    .blog-detail-date {
        color: #7f8c8d;
        font-style: italic;
    }

    .blog-detail-tags {
        display: flex;
        align-items: center;
        gap: 10px;
        flex-wrap: wrap;
    }

    .blog-tag {
        background-color: #9333ea;
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
    }

    .like-count {
        font-weight: bold;
        color: #2ecc71;
        display: block;
        margin-bottom: 20px;
    }

    .blog-detail-comments {
        background-color: #f1f4f8;
        padding: 20px;
        border-radius: 8px;
        margin-top: 20px;
    }

    .blog-detail-comments h3 {
        color: #2c3e50;
        margin-bottom: 15px;
        border-bottom: 2px solid #9333ea;
        padding-bottom: 5px;
    }

    .comment {
        background-color: white;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .comment-author {
        font-weight: bold;
        color: #9333ea;
        margin-bottom: 5px;
        display: block;
    }

    .comment-text {
        color: #34495e;
    }

    @media screen and (max-width: 600px) {
        .main-content {
            padding: 10px;
        }

        .blog-detail {
            padding: 20px;
        }

        .blog-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }

        .blog-detail h2 {
            font-size: 1.5rem;
        }

        .blog-detail-image {
            height: 250px;
        }

        .blog-detail-meta {
            flex-direction: column;
            align-items: flex-start;
            gap: 10px;
        }
    }

    /* Previous CSS remains the same */

     /* Previous CSS remains the same */

     .blog-interaction-section {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-top: 20px;
    }

    .like-section {
        margin-bottom: 20px;
    }

    .like-btn {
        background-color: #9333ea;
        color: white;
        border: none;
        padding: 8px 12px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-size: 0.9rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .like-btn svg {
        width: 20px;
        height: 20px;
        stroke: white;
        transition: fill 0.3s ease;
    }

    .like-btn.liked svg {
        fill: white;
        stroke: white;
    }

    .like-btn:hover {
        background-color: #7e22ce;
    }

    .add-comment {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-bottom: 20px;
    }

    .comment-input {
        width: 100%;
        min-height: 100px;
        padding: 10px;
        border: 1px solid #d1d5db;
        border-radius: 5px;
        resize: vertical;
    }

    .comment-btn {
        align-self: flex-start;
        background-color: #9333ea;
        color: white;
        border: none;
        padding: 8px 12px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-size: 0.9rem;
    }

    .comment-btn:hover {
        background-color: #7e22ce;
    }

    @media screen and (max-width: 600px) {
        .like-btn {
            flex-direction: column;
            align-items: center;
            gap: 5px;
        }
    }
</style>